// <auto-generated />
using System;
using EquipmentLiveUpdate.Infrastructure.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EquipmentLiveUpdate.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250429013710_AddedEventStateHistory")]
    partial class AddedEventStateHistory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EquipmentLiveUpdate.Infrastructure.Model.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipments", (string)null);

                    b.HasData(
                        new
                        {
                            EquipmentId = 1,
                            Description = "Machine to make good bricks",
                            Name = "Brick machine 1"
                        },
                        new
                        {
                            EquipmentId = 2,
                            Description = "Machine to make vary good bricks",
                            Name = "Brick machine 2"
                        },
                        new
                        {
                            EquipmentId = 3,
                            Description = "Machine to make the best bricks ever",
                            Name = "Brick machine 3"
                        });
                });

            modelBuilder.Entity("EquipmentLiveUpdate.Infrastructure.Model.EquipmentState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId")
                        .IsUnique();

                    b.ToTable("EquipmentStates", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EquipmentId = 1,
                            Status = 0,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            EquipmentId = 2,
                            Status = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 3,
                            EquipmentId = 3,
                            Status = 2,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedBy = 1
                        });
                });

            modelBuilder.Entity("EquipmentLiveUpdate.Infrastructure.Model.EquipmentStateHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("EquipmentStateHistory", (string)null);
                });

            modelBuilder.Entity("EquipmentLiveUpdate.Infrastructure.Model.EquipmentState", b =>
                {
                    b.HasOne("EquipmentLiveUpdate.Infrastructure.Model.Equipment", "Equipment")
                        .WithOne()
                        .HasForeignKey("EquipmentLiveUpdate.Infrastructure.Model.EquipmentState", "EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("EquipmentLiveUpdate.Infrastructure.Model.EquipmentStateHistory", b =>
                {
                    b.HasOne("EquipmentLiveUpdate.Infrastructure.Model.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });
#pragma warning restore 612, 618
        }
    }
}
